{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,2BAA2B,EAAE,eAAe,EAAE,MAAM,QAAQ,CAAC;AAUrF,MAAM,CAAC,MAAM,CAAC,GAAG,CAAE,QAAgB,EAAG,SAAiB,EAAE,GAAG,QAAa,EAAG,EAAE;IAE1E,MAAM,OAAO,GAAG,aAAa,CAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAE,CAAC;IAC/D,MAAM,wBAAwB,GAAG,CAAC,CAAC,OAAO,QAAQ,KAAK,UAAU,IAAI,QAAQ,KAAK,gBAAgB,CAAC,CAAC;IAEpG,IAAI,wBAAwB,EAAG;QAC3B,MAAM,QAAQ,GAAG,2BAA2B,CAAE,QAAQ,CAAE,CAAC;QACzD,OAAO,CAAC,WAAW,CAAE,QAAQ,CAAE,CAAC;KACnC;IAED,OAAO,wBAAwB,CAAC,CAAC,CAAC,eAAe,CAAE,OAAO,EAAE,SAAS,CAAE,CAAC,CAAC,CAAC,OAAO,CAAC;AAEtF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,gBAAgB,CAAC","sourcesContent":["import { createElement, createFragementFromChildren, applyAttributes } from \"./core\";\n\nexport declare namespace h {\n    export namespace JSX {\n        interface IntrinsicElements {\n            [tagName: string]: any;\n        }\n    }\n}\n\nexport const h = ( nodeName: string , vnodeData: object, ...children: any ) => {\n\n    const element = createElement( nodeName, vnodeData, children );\n    const isNotFunctionalComponent = !(typeof nodeName === 'function' && nodeName !== DocumentFragment);\n\n    if( isNotFunctionalComponent ) {\n        const fragment = createFragementFromChildren( children );\n        element.appendChild( fragment );\n    }\n\n    return isNotFunctionalComponent ? applyAttributes( element, vnodeData ) : element;\n\n};\n\nexport const Fragment = DocumentFragment;"]}