{"version":3,"file":"create-fragment-from-children.js","sourceRoot":"","sources":["../../src/core/create-fragment-from-children.ts"],"names":[],"mappings":"AAAA,MAAM,YAAY,GAAG,CAAE,KAAsB,EAAE,QAA0B,EAAG,EAAE;IAE1E,IAAI,KAAK,YAAY,IAAI,EAAG;QAExB,QAAQ,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC;KAEjC;SAAM,IAAK,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAG;QAEjE,QAAQ,CAAC,WAAW,CAAE,QAAQ,CAAC,cAAc,CAAE,KAAK,CAAE,CAAE,CAAC;KAE5D;SAAM,IAAK,KAAK,YAAY,KAAK,EAAG;QAEjC,KAAK,CAAC,OAAO,CAAE,KAAK,CAAC,EAAE,CAAC,YAAY,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAE,CAAC;KAE7D;IAED,OAAO,QAAQ,CAAC;AAEpB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAE,QAAkB,EAAG,EAAE;IAEhE,MAAM,QAAQ,GAAG,QAAQ,CAAC,sBAAsB,EAAE,CAAC;IAEnD,QAAQ,CAAC,OAAO,CAAE,KAAK,CAAC,EAAE,CAAC,YAAY,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAE,CAAC;IAE7D,OAAO,QAAQ,CAAC;AAEpB,CAAC,CAAC","sourcesContent":["const processNodes = ( child: Node | NodeList, fragment: DocumentFragment ) => {\n\n    if( child instanceof Node ) {\n\n        fragment.appendChild( child );\n\n    } else if ( typeof child === 'string' || typeof child === 'number' ) {\n\n        fragment.appendChild( document.createTextNode( child ) );\n\n    } else if ( child instanceof Array ) {\n\n        child.forEach( child => processNodes( child, fragment ) );\n\n    }\n\n    return fragment;\n\n};\n\nexport const createFragementFromChildren = ( children: NodeList ) => {\n\n    const fragment = document.createDocumentFragment();\n\n    children.forEach( child => processNodes( child, fragment ) );\n\n    return fragment;\n\n};"]}