{"version":3,"file":"event.js","sourceRoot":"","sources":["../../src/decorators/event.ts"],"names":[],"mappings":"AAMA;;EAEE;AACF,MAAM,CAAC,MAAM,KAAK,GAAG,CAAE,UAA8B,EAAE,EAAG,EAAE;IAExD,OAAO,CAAE,MAAmB,EAAE,YAAoB,EAAG,EAAE;QAEnD,MAAM,UAAU,GAAG;YAEf,GAAG;gBAEC,MAAM,KAAK,GAAQ,IAAI,CAAC;gBAExB,OAAO;oBACH,IAAI,CAAG,KAAW;wBAEd,MAAM,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC;wBAClF,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,OAAO,CAAE,CAAC;wBACrG,MAAM,KAAK,GAAG,IAAI,WAAW,CAAE,SAAS,EAAE,YAAY,CAAE,CAAC;wBAEzD,KAAK,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;oBAEjC,CAAC;iBACJ,CAAC;YAEN,CAAC;SAEJ,CAAC;QAEF,OAAO,MAAM,CAAC,cAAc,CAAE,MAAM,EAAE,YAAY,EAAE,UAAU,CAAE,CAAC;IAErE,CAAC,CAAC;AAEN,CAAC,CAAC","sourcesContent":["import { CustomEventOptions } from '../declarations';\n\nexport interface EventEmitter {\n    emit( value: any ): void;\n}\n\n/**\n    * Creates custom events that can be emitted inside the components.\n*/\nexport const Event = ( options: CustomEventOptions = {} ) => {\n\n    return ( target: HTMLElement, propertyName: string ) => {\n\n        const descriptor = {\n\n            get() {\n\n                const _this: any = this;\n\n                return {\n                    emit ( value?: any ) {\n\n                        const eventName = options && options.eventName ? options.eventName : propertyName;\n                        const eventOptions = Object.assign({}, { detail: value, bubbles: true, cancelable: true }, options );\n                        const event = new CustomEvent( eventName, eventOptions );\n\n                        _this.dispatchEvent( event );\n\n                    }\n                };\n\n            }\n\n        };\n\n        return Object.defineProperty( target, propertyName, descriptor );\n\n    };\n\n};\n"]}