{"version":3,"file":"component.js","sourceRoot":"","sources":["../../src/declarations/component.ts"],"names":[],"mappings":"","sourcesContent":["export interface ComponentConstructor {\n    connectedCallback?: () => void;\n    attributeChangedCallback?: (name: string, oldValue: string| null, newValue: string | null) => void;\n    disconnectedCallback?: () => void;\n    render?: () => any;\n    renderRoot: CustomElementRenderRoot;\n    connected: boolean;\n    properties: any;\n    __canAttachShadowDom: boolean;\n    __hasShadowdomPolyfill: boolean;\n    __nodeName: string;\n    __jsxProps?: Map<string, unknown>;\n    componentOnReady: () => Promise<any>;\n}\n\nexport interface ComponentOptions {\n    tag: string,\n    style?: string,\n    styles?: string[];\n    shadow?: boolean;\n}\n\nexport interface CustomElement extends HTMLElement {\n    connectedCallback?(): void;\n    disconnectedCallback?(): void;\n    observedAttributes?(): void;\n    render?(): void;\n}\n\nexport interface CustomElementConstructor {\n    new (...args: any[]): CustomElement;\n}\n\nexport type CustomElementRenderRoot = Element | DocumentFragment;\n\nexport interface RenderRoot {\n    renderRoot: CustomElementRenderRoot\n}\n\nexport type StyleString = string | boolean;\n\nexport interface RenderTemplate {\n    template: HTMLTemplateElement;\n    styles: StyleString;\n    templateResult: DocumentFragment;\n}\n\nexport type QueryTarget = Element | DocumentFragment;"]}